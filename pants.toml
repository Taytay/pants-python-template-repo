# Copyright 2020 Pants project contributors.
# Licensed under the Apache License, Version 2.0 (see LICENSE).

[GLOBAL]
pants_version = "2.20.0"
backend_packages.add = [
  "pants.backend.python",
  "pants.backend.docker",
  "pants.backend.python.mixed_interpreter_constraints",
  "pants.backend.python.typecheck.mypy",
  "pants.backend.experimental.python.lint.ruff.check",
  "pants.backend.experimental.python.lint.ruff.format",
  "pants.backend.experimental.visibility",
  "pants.backend.shell",
  "pants.backend.shell.lint.shellcheck",
  "pants.backend.shell.lint.shfmt"
]

pants_ignore = [
    ".*/",
    "/dist/",
    "__pycache__",
    "*.log"
]

[anonymous-telemetry]
enabled = false

[cli.alias]
--all-changed = "--changed-since=HEAD --changed-dependents=transitive"

[python-infer]
assets = true
unowned_dependency_behavior = "error"

[source]
# We make our root src/python
root_patterns = ["/src/python", "/3rdparty"]

[python]
# The default interpreter constraints for code in this repo. Individual targets can override
#  this with the `interpreter_constraints` field. See
#  https://www.pantsbuild.org/docs/python-interpreter-compatibility.
# Enable the "resolves" mechanism, which turns on lockfiles for user code. See
# https://www.pantsbuild.org/docs/python-third-party-dependencies. This also adds the
# `generate-lockfiles` goal for Pants to generate the lockfile for you.
enable_resolves = true
# After changing this, don't forget to regenerate lockfiles
# then, re-run pants-export and update your local IDE
interpreter_constraints = ["CPython==3.10.10"]
pip_version = "24.0"

[python-bootstrap]
# We search for interpreters both on the $PATH and in the `$(pyenv root)/versions` folder.
#  If you're using macOS, you may want to leave off the <PATH> entry to avoid using the
#  problematic system Pythons. See
#  https://www.pantsbuild.org/docs/python-interpreter-compatibility#changing-the-interpreter-search-path.
search_path = ["<PATH>", "<PYENV>"]

[coverage-py]
report = [
    "console",
    "xml",
    "html",
]

[python.resolves]
# Run `pants generate-lockfiles` to generate these lockfiles
python-default = "python-default.lock"
black = "3rdparty/python/black.lock"
ruff = "3rdparty/python/ruff.lock"
pytest = "3rdparty/python/pytest.lock"
coverage-py = "3rdparty/python/coverage-py.lock"
mypy = "3rdparty/python/mypy.lock"

# [docformatter]
# args = ["--wrap-summaries=100", "--wrap-descriptions=100"]

# [flake8]
# config = "build-support/flake8/.flake8"
# source_plugins = ["build-support/flake8"]
# install_from_resolve = "flake8"
# requirements = ["//3rdparty/python:flake8"]

[shellcheck]
args = ["--external-sources"]

[shfmt]
# See https://github.com/mvdan/sh/blob/master/cmd/shfmt/shfmt.1.scd#printer-flags.
args = ["-i 2", "-ci", "-sr"]

[pytest]
args = ["--no-header", "-vv"]
execution_slot_var = "TEST_EXECUTION_SLOT"
install_from_resolve = "pytest"
#requirements = ["//3rdparty/python:pytest"]

